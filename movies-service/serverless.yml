service: movies-service
frameworkVersion: '4'

plugins:
  - serverless-python-requirements

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt

# Global configuration
provider:
  name: aws
  runtime: python3.10
  stage: dev
  region: eu-central-1
  memorySize: 128
  timeout: 10
  environment:
    TABLE_NAME: Movies
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [MoviesTable, Arn]

# Lambda functions
functions:
  createMovie:
    handler: createMovie/create_movie.create
    package:
      include: 'createMovie/**'
    events:
      - http:
          path: movies
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Authorization

  getMovies:
    handler: getMovies/get_movies.get_all
    package:
      include: 'getMovies/**'
    events:
      - http:
          path: movies
          method: get
          cors:
            origins:
              - '*'
            headers:
              - Authorization

  getMovie:
    handler: getMovie/get_movie.get_one
    package:
      include: 'getMovie/**'
    events:
      - http:
          path: movies/{id}
          method: get
          cors:
            origins:
              - '*'
            headers:
              - Authorization

  updateMovie:
    handler: updateMovie/update_movie.update
    package:
      include: 'updateMovie/**'
    events:
      - http:
          path: movies/{id}
          method: put
          cors:
            origins:
              - '*'
            headers:
              - Authorization

  deleteMovie:
    handler: deleteMovie/delete_movie.delete
    package:
      include: 'deleteMovie/**'
    events:
      - http:
          path: movies/{id}
          method: delete
          cors:
            origins:
              - '*'
            headers:
              - Authorization

# Additional resources (S3 storage, DynamoDB tables,...)
# Written in CloudFormation template syntax
resources:
  Resources:
    MoviesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Movies
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
          - AttributeName: title
            AttributeType: S
          - AttributeName: genres
            AttributeType: S
          - AttributeName: actors
            AttributeType: S
          - AttributeName: directors
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        GlobalSecondaryIndexes:
          - IndexName: TitleIndex
            KeySchema:
              - AttributeName: title
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
          - IndexName: GenresIndex
            KeySchema:
              - AttributeName: genres
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
          - IndexName: ActorsIndex
            KeySchema:
              - AttributeName: actors
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
          - IndexName: DirectorsIndex
            KeySchema:
              - AttributeName: directors
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
